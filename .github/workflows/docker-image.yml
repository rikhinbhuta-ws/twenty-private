name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: rikhinbhutaws
  IMAGE_NAME: rikhinbhutaws-private-registry
  # AWS_REGION: us-east-2
  # EKS_CLUSTER_NAME: eks-cluster

jobs:
  push-docker-image:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      -
        name: Checkout repository
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./packages/twenty-docker/twenty/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Run security scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags }}
          format: 'sarif'
          output: 'trivy-results.sarif'
      -
        name: Upload scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

#  deploy-to-eks:
#     needs: push-docker-image
#     runs-on: ubuntu-latest
#     environment: dev
#     steps:
#     -
#       name: Checkout
#       uses: actions/checkout@v4
#     -
#       name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v4
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ env.AWS_REGION }}
#     -
#       name: Update kubeconfig
#       run: |
#         aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}
#     -
#       name: Install Helm
#       uses: azure/setup-helm@v3
#     -
#       name: Add Helm repositories (if using external charts)
#       run: |
#         # Add any external helm repos you need
#         # helm repo add bitnami https://charts.bitnami.com/bitnami
#         # helm repo update
#     -
#       name: Deploy with Helm
#       run: |
#         helm upgrade --install ${{ env.IMAGE_NAME }} ./helm-chart \
#           --namespace default \
#           --create-namespace \
#           --set image.repository=${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }} \
#           --set image.tag=${{ github.sha }} \
#           --set image.pullPolicy=Always
#     -
#       name: Verify deployment
#       run: |
#         kubectl rollout status deployment/${{ env.IMAGE_NAME }} --timeout=300s
#         kubectl get pods -l app=${{ env.IMAGE_NAME }}
